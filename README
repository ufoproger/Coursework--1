Первая выложенная версия курсовой работы по ПЯВУ.

Реализованные возможности:
- Нанесение точек на плоскость посредством мыши.
- Нанесение точек на плоскость посредством файла.
- Сохранение исходных координат точек в файл.
- Совмещение нанесенных точек с точками из файлов.
- Очистка плоскости от точек.
- Красивый GUI.

10 марта:
- Ахуеть, я сдал.

12 марта:
- Добавление алгоритма построение самонепересекающейся ломанной.
- 2 алгоритма построения ломаной в 2-х вариация.
- Выбор алгоритма построения ломаной.
- Замена структуры sPoint на класс cPoint.
- Косметические доработки интерфейса.

13 марта:
- Окончательной удаление из кода структуры sPoint. (реализован класс cPoint)
- Убраны лишние закомментированные строки ненужного больше кода.

26 апреля:
- Убрана возможность переключения режима построения ломанной. Теперь есть единый более качественный алгоритм.
- Убран лишний код.
- Более информативный GUI.

27 апреля:
- Оно работает.
- Много закомментированного.

27 мая:
- Значительные изменения в cPoints::calc(), теперь это работает более приемлимо.
- Написание рекурсивного построения самонепересекающейся ломанной.
- Небольшая чистка класса cPoints.

28 мая:
- Создание класса cMarkedPoint, наследованного от cPoint.
- Введение нового класса в основной код.
- Возможность выделения на плоскости одной или нескольких точек.
- Всплывающее меню на правой кнопке мышки с возможностью работы с точками.
- Отказ от старого способа построения ломаной в пользу рекурсивного.
- Добавлено диалоговое окно "О программе".
- Небольшая чистка от лишнего кода.

29 мая:
- Примитивный переход между 2-я отдельными множествами точек. (ручной и графический режим ввода данных)
- Добавление класса cModelColumns для работы Gtk::TreeView.
- Частичное добавление ручного режима ввода точек, создание контекстного меню управления.

30 мая:
- Теперь координаты точек могут быть заданы вещественными числами типа double!
